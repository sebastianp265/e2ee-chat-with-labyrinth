services:
  client:
    build: client
    ports:
      - '${CLIENT_PORT}:80'
    environment:
      SERVER_URL: 'http://${SERVER_HOST}:${SERVER_PORT}'
    depends_on:
      server:
        condition: service_healthy

  server:
    build: server
    ports:
      - '${SERVER_PORT}:8080'
    environment:
      CLIENT_URL: 'http://${CLIENT_HOST}:${CLIENT_PORT}'
      SERVER_DB_HOST: ${SERVER_DB_HOST}
      SERVER_DB_PORT: ${SERVER_DB_PORT}
      SERVER_DB_NAME: ${SERVER_DB_NAME}
      SERVER_DB_USER: ${SERVER_DB_USER}
      SERVER_DB_PASSWORD: ${SERVER_DB_PASSWORD}

      SERVER_TEMP_DB_HOST: ${SERVER_TEMP_DB_HOST}
      SERVER_TEMP_DB_PORT: ${SERVER_TEMP_DB_PORT}

      LABYRINTH_MAX_DEVICE_INACTIVITY: ${LABYRINTH_MAX_DEVICE_INACTIVITY}
    depends_on:
      server_db:
        condition: service_healthy
      server_temp_db:
        condition: service_healthy
    networks:
      - network_server_db
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://${SERVER_HOST}:${SERVER_PORT}/actuator/health" ]
      interval: 10s
      timeout: 2s
      retries: 10

  server_db:
    container_name: ${SERVER_DB_HOST_CONTAINER:-${SERVER_DB_HOST}}
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${SERVER_DB_NAME}
      POSTGRES_USER: ${SERVER_DB_USER}
      POSTGRES_PASSWORD: ${SERVER_DB_PASSWORD}
    ports:
      - '${SERVER_DB_PORT}:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - network_server_db
    healthcheck:
      test: pg_isready -U postgres -d server
      interval: 2s
      timeout: 2s
      retries: 20

  server_temp_db:
    container_name: ${SERVER_TEMP_DB_HOST_CONTAINER:-${SERVER_TEMP_DB_HOST}}
    image:
      redis:7.4-alpine
    ports:
      - '${SERVER_TEMP_DB_PORT}:6379'
    volumes:
      - redis_db:/data
    networks:
      - network_server_db
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  db:
  redis_db:

networks:
  network_server_db: